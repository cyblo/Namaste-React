Assignment 1


Q1] What is Emmet ?
A] Emmet is a powerful toolkit for developers that enhances HTML and CSS Workflow
Features provided by Emmet -
1. Abbreviation Syntax : It helps developers write Abbreviated syntax ( shortened form of syntax )
For Example -

ul > li*3
It is the shortened form for 
  

2. Nested Structures : It also supports nested structures , meaning it also provides the shortened form for nested structures.
For Example -
div > ul > li*3
It is the shortened form for 
  

3. CSS : It can also be used to generate CSS code quickly.
For Example -
m10 → margin: 10px;
p20 → padding: 20px;
bgc#f00 → background-color: #f00;
bd1pxs#000 → border: 1px solid #000;
Q2] Difference between a Library and Framework?
A] Library is a collection of pre-written code that developers can use to perform specific tasks.
In a Library control is in the hands of Developers.
Example - React


Framework provides a predefined structure and enforces certain rules or guidelines for building applications. 
In a framework the control is inverted.
Example - Angular


Q3]  What is CDN? Why do we use it?
A] CDN - Content Delivery Network
It is a collection of servers that work together to deliver content to users quickly and reliably.
 When you visit a website that uses a CDN, instead of fetching all the data from one central location (like the bookstore's main store), the CDN sends you the website content from a server closest to you.


Q4]  Why is React known as React?
React and the Virtual DOM
A] React is named React because it is built around the concept of reacting to the changes in data.
This reactive behaviour eliminates the need for manual DOM Updates.
React uses Virtual DOM to efficiently “react” to the changes by calculating the minimal updates needed and applying them to the actual DOM.


Q5] What is crossorigin in script tag?
A] The crossorigin attribute in the HTML script tag is used when we need to load scripts from an origin different from which the web page is being served.
This attribute is relevant for CDN where we fetch scripts for React and ReactDOM from domain which are different from our own.


Nowadays Modern browsers have a security policy CORS ( Cross-Origin Resource Sharing ). This policy prevents web-pages from making requests to domains other than the one that served the page itself, unless those domains explicitly allow it.


When you include scripts from a CDN, the browser might consider them as coming from a different origin compared to your own domain. Without the crossorigin attribute, certain security mechanisms might prevent these scripts from being loaded and executed correctly.


Q6]  What is difference between React and ReactDOM
A] React:
Think of React as the brain. It helps you create and manage the pieces (components) of your app, like buttons, menus, or forms. It handles how these pieces behave and how they should look, but it doesn’t know where to put them.
ReactDOM:
ReactDOM is the hands. It takes the pieces you made with React and puts them on the web page (in the browser's DOM). It’s responsible for displaying your app and updating it when things change.


Analogy:
* React = Architect (designs the building).
* ReactDOM = Builder (constructs the building in the real world).


Q7]  What is the difference between react.development.js and react.production.js files via CDN? 
A] react.development.js is used for development and debugging.
Contains detailed warnings, error messages, and helpful logs to aid developers in identifying and fixing issues.


react.production.js is used for production(live, deployed apps).
Stripped of all warnings, logs, and development-only checks to reduce the file size.
Minified and optimized for faster loading and execution.


When deploying the app to users in a live environment.


Q8]  What is async and defer?  
A] async and defer are attributes used in <script> tags in HTML to control how and when JavaScript files are loaded and executed.


Async
* Behavior:
   * The script file is downloaded in parallel with the rest of the HTML (non-blocking).
   * As soon as the script finishes downloading, it is executed immediately, potentially pausing further parsing of the HTML.
* Best For:
   * Scripts that don’t depend on other scripts or the DOM, such as analytics or tracking scripts.
* Drawback:
   * The execution order of scripts is not guaranteed. If multiple async scripts are used, they may execute in any order based on which finishes downloading first.
  

Defer
* Behavior:
   * The script file is downloaded in parallel with the rest of the HTML (non-blocking).
   * The script is executed only after the entire HTML document has been parsed.
* Best For:
   * Scripts that depend on the DOM or need to maintain the order of execution, like libraries and frameworks.
* Advantage:
   * Scripts execute in the order they appear in the HTML, ensuring predictable behavior.
